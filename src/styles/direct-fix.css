/**
 * Direct CSS overrides for pixel-level precise widget resizing
 * These are critical styles for exact widget positioning and resizing
 */

/* Ensure grid items respect their width */
.react-grid-item {
  position: absolute !important;
  box-sizing: border-box !important;
  transition-property: transform, width, height, left, top !important;
}

/* Make sure transform is not interfering with dimensions during resize */
.react-grid-item.resizing {
  z-index: 1;
  will-change: width, height !important;
  transition-property: width, height !important;
  transition-duration: 0s !important;
}

/* Ensure layout width is properly calculated */
.react-grid-layout {
  position: relative !important;
  transition: height 200ms ease !important;
  width: 100% !important;
  min-width: 100% !important;
  max-width: 100% !important;
}

/* Ensure grid items have the correct CSS transforms */
.react-grid-item.cssTransforms {
  transition-property: transform, width, height !important;
  left: 0 !important;
  top: 0 !important;
}

/* Fix widget dimensions */
.widget-wrapper {
  width: 100% !important;
  height: 100% !important;
  transition: none !important;
}

/* Make sure resize handles are visible */
.react-grid-item .react-resizable-handle {
  display: block !important;
  visibility: visible !important;
  opacity: 0.8 !important;
}

/* CRITICAL: Disable transforms during resize - this is what enables horizontal resizing */
.react-grid-item.resizing {
  transform: none !important;
  -webkit-transform: none !important;
  -ms-transform: none !important;
}

/* Make widget wrapper not interfere with resizing */
.widget-wrapper {
  pointer-events: none !important;
}

.widget-wrapper > * {
  pointer-events: auto !important;
}

/* Increase the specificity of these rules to ensure they're applied */
.dashboard-grid-container .react-grid-layout .react-grid-item {
  box-sizing: border-box !important;
  transform-origin: top left !important;
}

/* Prevent transforms from breaking width calculations */
.dashboard-grid-container .react-grid-layout .react-grid-item.resizing {
  width: var(--actual-width) !important;
  height: var(--actual-height) !important;
  /* Use fractional pixels for exact sizing */
  width: calc(var(--exact-width-px, 0) * 1px) !important;
  height: calc(var(--exact-height-px, 0) * 1px) !important;
}

/* Enable precise width calculation for placeholder during resize */
.react-grid-item.react-grid-placeholder {
  width: calc(100% / 24 * var(--cols, 1) - var(--margin, 10px)) !important;
  transition: width 0s, left 0s, top 0s !important; /* Disable transitions for more precise resizing */
}

/* Ensure grid items maintain exact sizing */
.react-grid-layout .react-grid-item {
  box-sizing: border-box !important;
  /* Disable rounding to enable precise sizing */
  transform-origin: top left !important;
  /* Allow fractional widths */
  min-width: auto !important;
}

/* Improve drag handle visibility for precise positioning */
.react-grid-item .react-resizable-handle {
  /* Make handles slightly larger for easier grabbing */
  width: 12px !important;
  height: 12px !important;
  background-color: rgba(59, 130, 246, 0.7) !important;
  /* Add borders to help with visibility */
  border: 1px solid white !important;
}